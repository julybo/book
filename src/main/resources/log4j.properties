#log4j 配置
#log4j定义了8个级别的log优先级从高到低依次为：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、 ALL。
#CONSOLE前面的DEBUG是控制台需要打印什么DEBUG级别以上的日志的信息
# 设定logger的root stdout
log4j.rootLogger=stdout,INFO,ERROR,DEBUG,WARN
#,ALL
##############打印到平台的日志##################
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}-[%p]-(%C:%L) %m%n
log4j.appender.stdout.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n
##############WARN打印的文件的日志##################
log4j.logger.WARN=WARN
log4j.appender.WARN=org.apache.log4j.DailyRollingFileAppender
#zbinfo.Oper.Log4jMyAppender
#log4j.appender.tracking.Encoding=utf-8
log4j.appender.WARN.File=${webapp.root}WEB-INF/logs/warn/WARN.log
log4j.appender.WARN.DatePattern='.'yyyy-MM-dd
log4j.appender.WARN.Threshold=WARN
log4j.appender.WARN.Append = true
log4j.appender.WARN.layout=org.apache.log4j.PatternLayout
log4j.appender.WARN.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
#%-d{yyyy-MM-dd HH:mm:ss}-[%p]-(%C:%L) %m%n
#只打印WARN级别日志
log4j.appender.WARN.filter.infoFilter = org.apache.log4j.varia.LevelRangeFilter
log4j.appender.WARN.filter.infoFilter.LevelMin=WARN
log4j.appender.WARN.filter.infoFilter.LevelMax=WARN
#只有在RollingFileAppender中可以通过设置MaxFileSize和maxBackupIndex属性来指定要保留的日志文件大小以及个数，从而实现自动清除
#可是Log4j中的DailyRollingFileAppender这个类却不带属性maxBackupIndex,maxFileSize等，所以无法通过直接配置实现
#log4j.appender.WARN.MaxFileSize = 10M
#log4j.appender.WARN.MaxBackupIndex = 5
##############ERROR打印的文件的日志##################
log4j.logger.ERROR=ERROR
#log4j.appender.error=zbinfo.Oper.Log4jMyAppender
log4j.appender.ERROR=org.apache.log4j.DailyRollingFileAppender
log4j.appender.ERROR.File= ${webapp.root}WEB-INF/logs/error/ERROR.log
log4j.appender.ERROR.DatePattern='.'yyyy-MM-dd
log4j.appender.ERROR.Threshold=ERROR
log4j.appender.ERROR.Append=true
log4j.appender.ERROR.layout=org.apache.log4j.PatternLayout
#log4j.appender.error.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}-[%p]-(%C:%L) %m%n
log4j.appender.ERROR.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
#只打印ERROR级别的日志
log4j.appender.ERROR.filter.infoFilter = org.apache.log4j.varia.LevelRangeFilter
log4j.appender.ERROR.filter.infoFilter.LevelMin=ERROR
log4j.appender.ERROR.filter.infoFilter.LevelMax=ERROR
##############DEBUG打印的文件的日志##################
log4j.logger.DEBUG=DEBUG
log4j.appender.DEBUG = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.debug=zbinfo.Oper.Log4jMyAppender
log4j.appender.DEBUG.File= ${webapp.root}WEB-INF/logs/debug/DEBUG.log
log4j.appender.DEBUG.DatePattern='.'yyyy-MM-dd
log4j.appender.DEBUG.Threshold=DEBUG
log4j.appender.DEBUG.Append = true
log4j.appender.DEBUG.layout=org.apache.log4j.PatternLayout
#log4j.appender.debug.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}-[%p]-(%C:%L) %m%n
log4j.appender.DEBUG.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
#只打印DEBUG级别的日志
log4j.appender.DEBUG.filter.infoFilter = org.apache.log4j.varia.LevelRangeFilter
log4j.appender.DEBUG.filter.infoFilter.LevelMin=DEBUG
log4j.appender.DEBUG.filter.infoFilter.LevelMax=DEBUG
##############INFO打印的文件的日志##################
log4j.logger.INFO=INFO
#log4j.appender.info=zbinfo.Oper.Log4jMyAppender
log4j.appender.INFO = org.apache.log4j.DailyRollingFileAppender
log4j.appender.INFO.File= ${webapp.root}WEB-INF/logs/info/INFO.log
log4j.appender.INFO.DatePattern='.'yyyy-MM-dd
log4j.appender.INFO.Threshold=INFO
log4j.appender.INFO.Append = true
log4j.appender.INFO.layout=org.apache.log4j.PatternLayout
#log4j.appender.info.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}-[%p]-(%C:%L) %m%n
log4j.appender.INFO.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
#只显示本级别INFO的日志
log4j.appender.INFO.filter.infoFilter = org.apache.log4j.varia.LevelRangeFilter
log4j.appender.INFO.filter.infoFilter.LevelMin=INFO
log4j.appender.INFO.filter.infoFilter.LevelMax=INFO
##############ALL打印的文件的日志##################
#输出ALL级别的日志到all.log
#log4j.logger.ALL=ALL
#log4j.appender.ALL = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.ALL.File = ${webapp.root}WEB-INF/logs/all/all.log
#log4j.appender.file.DatePattern ='.'yyyy-MM-dd
#log4j.appender.ALL.Threshold = ALL
#log4j.appender.ALL.Append = true
#log4j.appender.ALL.layout = org.apache.log4j.PatternLayout
#log4j.appender.ALL.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

##############打印的文件SQL语句的日志##################
#4 mybatis 显示SQL语句部分
log4j.logger.org.mybatis=DEBUG
log4j.logger.cn.tibet.cas.dao=DEBUG
log4j.logger.org.mybatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.org.mybatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.org.mybatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.java.sql.Connection=DEBUG

log4j.logger.java.sql=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
